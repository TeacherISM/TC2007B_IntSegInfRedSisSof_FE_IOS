//
// ReportsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class ReportsAPI {
    /**

     - parameter body: (body)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func reportsCreate(body: Report, completion: @escaping ((_ data: Report?,_ error: Error?) -> Void)) {
        reportsCreateWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /reports/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - examples: [{contentType=application/json, example={
  "descripcion" : "descripcion",
  "fecha" : "2000-01-23",
  "title" : "title"
}}]
     - parameter body: (body)

     - returns: RequestBuilder<Report>
     */
    open class func reportsCreateWithRequestBuilder(body: Report) -> RequestBuilder<Report> {
        let path = "/reports/"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Report>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter title2: (form)
     - parameter descripcion2: (form)
     - parameter fecha2: (form)
     - parameter title: (form)
     - parameter descripcion: (form)
     - parameter fecha: (form)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func reportsCreate(title2: String, descripcion2: String, fecha2: Date, title: String, descripcion: String, fecha: Date, completion: @escaping ((_ data: Report?,_ error: Error?) -> Void)) {
        reportsCreateWithRequestBuilder(title2: title2, descripcion2: descripcion2, fecha2: fecha2, title: title, descripcion: descripcion, fecha: fecha).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /reports/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - examples: [{contentType=application/json, example={
  "descripcion" : "descripcion",
  "fecha" : "2000-01-23",
  "title" : "title"
}}]
     - parameter title2: (form)
     - parameter descripcion2: (form)
     - parameter fecha2: (form)
     - parameter title: (form)
     - parameter descripcion: (form)
     - parameter fecha: (form)

     - returns: RequestBuilder<Report>
     */
    open class func reportsCreateWithRequestBuilder(title2: String, descripcion2: String, fecha2: Date, title: String, descripcion: String, fecha: Date) -> RequestBuilder<Report> {
        let path = "/reports/"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: {})
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Report>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter title2: (form)
     - parameter descripcion2: (form)
     - parameter fecha2: (form)
     - parameter title: (form)
     - parameter descripcion: (form)
     - parameter fecha: (form)
     - parameter completion: completion handler to receive the data and the error objects
     */



    /**
     - POST /reports/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - examples: [{contentType=application/json, example={
  "descripcion" : "descripcion",
  "fecha" : "2000-01-23",
  "title" : "title"
}}]
     - parameter title2: (form)
     - parameter descripcion2: (form)
     - parameter fecha2: (form)
     - parameter title: (form)
     - parameter descripcion: (form)
     - parameter fecha: (form)

     - returns: RequestBuilder<Report>
     */

    /**

     - parameter _id: (path) A unique integer value identifying this report.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func reportsDestroy(_id: Int, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        reportsDestroyWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /reports/{id}/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - parameter _id: (path) A unique integer value identifying this report.

     - returns: RequestBuilder<Void>
     */
    open class func reportsDestroyWithRequestBuilder(_id: Int) -> RequestBuilder<Void> {
        var path = "/reports/{id}/"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func reportsList(page: Int? = nil, completion: @escaping ((_ data: PaginatedReportList?,_ error: Error?) -> Void)) {
        let username = "A01662814"
        let password = "password"
        let loginString = "\(username):\(password)"
        let loginData = loginString.data(using: .utf8)!
        let base64LoginString = loginData.base64EncodedString()

        reportsListWithRequestBuilder(page: page)
            .addHeader(name: "Authorization", value: "Basic \(base64LoginString)")
            .execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /reports/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - examples: [{contentType=application/json, example={
  "next" : "http://api.example.org/accounts/?page=4",
  "previous" : "http://api.example.org/accounts/?page=2",
  "count" : 123,
  "results" : [ {
    "descripcion" : "descripcion",
    "fecha" : "2000-01-23",
    "title" : "title"
  }, {
    "descripcion" : "descripcion",
    "fecha" : "2000-01-23",
    "title" : "title"
  } ]
}}]
     - parameter page: (query) A page number within the paginated result set. (optional)

     - returns: RequestBuilder<PaginatedReportList>
     */
    open class func reportsListWithRequestBuilder(page: Int? = nil) -> RequestBuilder<PaginatedReportList> {
        let path = "/reports/"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "page": page?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<PaginatedReportList>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path) A unique integer value identifying this report.
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func reportsPartialUpdate(_id: Int, body: PatchedReport? = nil, completion: @escaping ((_ data: Report?,_ error: Error?) -> Void)) {
        reportsPartialUpdateWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PATCH /reports/{id}/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - examples: [{contentType=application/json, example={
  "descripcion" : "descripcion",
  "fecha" : "2000-01-23",
  "title" : "title"
}}]
     - parameter _id: (path) A unique integer value identifying this report.
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Report>
     */
    open class func reportsPartialUpdateWithRequestBuilder(_id: Int, body: PatchedReport? = nil) -> RequestBuilder<Report> {
        var path = "/reports/{id}/"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Report>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path) A unique integer value identifying this report.
     - parameter title2: (form)  (optional)
     - parameter descripcion2: (form)  (optional)
     - parameter fecha2: (form)  (optional)
     - parameter title: (form)  (optional)
     - parameter descripcion: (form)  (optional)
     - parameter fecha: (form)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func reportsPartialUpdate(_id: Int, title2: String? = nil, descripcion2: String? = nil, fecha2: Date? = nil, title: String? = nil, descripcion: String? = nil, fecha: Date? = nil, completion: @escaping ((_ data: Report?,_ error: Error?) -> Void)) {
        reportsPartialUpdateWithRequestBuilder(_id: _id, title2: title2, descripcion2: descripcion2, fecha2: fecha2, title: title, descripcion: descripcion, fecha: fecha).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PATCH /reports/{id}/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - examples: [{contentType=application/json, example={
  "descripcion" : "descripcion",
  "fecha" : "2000-01-23",
  "title" : "title"
}}]
     - parameter _id: (path) A unique integer value identifying this report.
     - parameter title2: (form)  (optional)
     - parameter descripcion2: (form)  (optional)
     - parameter fecha2: (form)  (optional)
     - parameter title: (form)  (optional)
     - parameter descripcion: (form)  (optional)
     - parameter fecha: (form)  (optional)

     - returns: RequestBuilder<Report>
     */
    open class func reportsPartialUpdateWithRequestBuilder(_id: Int, title2: String? = nil, descripcion2: String? = nil, fecha2: Date? = nil, title: String? = nil, descripcion: String? = nil, fecha: Date? = nil) -> RequestBuilder<Report> {
        var path = "/reports/{id}/"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: {})
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Report>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PATCH", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path) A unique integer value identifying this report.
     - parameter title2: (form)  (optional)
     - parameter descripcion2: (form)  (optional)
     - parameter fecha2: (form)  (optional)
     - parameter title: (form)  (optional)
     - parameter descripcion: (form)  (optional)
     - parameter fecha: (form)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */



    /**
     - PATCH /reports/{id}/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - examples: [{contentType=application/json, example={
  "descripcion" : "descripcion",
  "fecha" : "2000-01-23",
  "title" : "title"
}}]
     - parameter _id: (path) A unique integer value identifying this report.
     - parameter title2: (form)  (optional)
     - parameter descripcion2: (form)  (optional)
     - parameter fecha2: (form)  (optional)
     - parameter title: (form)  (optional)
     - parameter descripcion: (form)  (optional)
     - parameter fecha: (form)  (optional)

     - returns: RequestBuilder<Report>
     */

    /**

     - parameter _id: (path) A unique integer value identifying this report.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func reportsRetrieve(_id: Int, completion: @escaping ((_ data: Report?,_ error: Error?) -> Void)) {
        reportsRetrieveWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /reports/{id}/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - examples: [{contentType=application/json, example={
  "descripcion" : "descripcion",
  "fecha" : "2000-01-23",
  "title" : "title"
}}]
     - parameter _id: (path) A unique integer value identifying this report.

     - returns: RequestBuilder<Report>
     */
    open class func reportsRetrieveWithRequestBuilder(_id: Int) -> RequestBuilder<Report> {
        var path = "/reports/{id}/"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Report>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)
     - parameter _id: (path) A unique integer value identifying this report.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func reportsUpdate(body: Report, _id: Int, completion: @escaping ((_ data: Report?,_ error: Error?) -> Void)) {
        reportsUpdateWithRequestBuilder(body: body, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PUT /reports/{id}/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - examples: [{contentType=application/json, example={
  "descripcion" : "descripcion",
  "fecha" : "2000-01-23",
  "title" : "title"
}}]
     - parameter body: (body)
     - parameter _id: (path) A unique integer value identifying this report.

     - returns: RequestBuilder<Report>
     */
    open class func reportsUpdateWithRequestBuilder(body: Report, _id: Int) -> RequestBuilder<Report> {
        var path = "/reports/{id}/"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Report>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter title2: (form)
     - parameter descripcion2: (form)
     - parameter fecha2: (form)
     - parameter title: (form)
     - parameter descripcion: (form)
     - parameter fecha: (form)
     - parameter _id: (path) A unique integer value identifying this report.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func reportsUpdate(title2: String, descripcion2: String, fecha2: Date, title: String, descripcion: String, fecha: Date, _id: Int, completion: @escaping ((_ data: Report?,_ error: Error?) -> Void)) {
        reportsUpdateWithRequestBuilder(title2: title2, descripcion2: descripcion2, fecha2: fecha2, title: title, descripcion: descripcion, fecha: fecha, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PUT /reports/{id}/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - examples: [{contentType=application/json, example={
  "descripcion" : "descripcion",
  "fecha" : "2000-01-23",
  "title" : "title"
}}]
     - parameter title2: (form)
     - parameter descripcion2: (form)
     - parameter fecha2: (form)
     - parameter title: (form)
     - parameter descripcion: (form)
     - parameter fecha: (form)
     - parameter _id: (path) A unique integer value identifying this report.

     - returns: RequestBuilder<Report>
     */
    open class func reportsUpdateWithRequestBuilder(title2: String, descripcion2: String, fecha2: Date, title: String, descripcion: String, fecha: Date, _id: Int) -> RequestBuilder<Report> {
        var path = "/reports/{id}/"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: {})
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Report>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter title2: (form)
     - parameter descripcion2: (form)
     - parameter fecha2: (form)
     - parameter title: (form)
     - parameter descripcion: (form)
     - parameter fecha: (form)
     - parameter _id: (path) A unique integer value identifying this report.
     - parameter completion: completion handler to receive the data and the error objects
     */



    /**
     - PUT /reports/{id}/

     - BASIC:
       - type: http
       - name: basicAuth
     - API Key:
       - type: apiKey sessionid (QUERY)
       - name: cookieAuth
     - examples: [{contentType=application/json, example={
  "descripcion" : "descripcion",
  "fecha" : "2000-01-23",
  "title" : "title"
}}]
     - parameter title2: (form)
     - parameter descripcion2: (form)
     - parameter fecha2: (form)
     - parameter title: (form)
     - parameter descripcion: (form)
     - parameter fecha: (form)
     - parameter _id: (path) A unique integer value identifying this report.

     - returns: RequestBuilder<Report>
     */

}
